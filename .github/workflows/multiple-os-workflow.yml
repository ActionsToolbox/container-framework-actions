name: Multiple OS Workflow

on:
  workflow_call:
    inputs:
      runs-on:
        description: Platform to execute on
        type: string
        default: ubuntu-latest
        required: false
      directory:
        description: To be done
        required: true
        type: string
      lint:
        description: To be done
        required: false
        type: boolean
        default: true
      publish_all:
        description: To be done
        required: false
        type: boolean
        default: false
      publish_dh:
        description: To be done
        required: false
        type: boolean
        default: false
      publish_gh:
        description: To be done
        required: false
        type: boolean
        default: false
      ref:
        description: To be done
        required: true
        type: string
      fail-fast:
        description: To be done
        required: false
        type: boolean
        default: false
      max-parallel:
        description: To be done
        required: false
        type: number
        default: 1
      force-build:
        description: To be done
        required: false
        type: boolean
        default: false

jobs:
  get-versions:
    name: Get versions
    runs-on: ${{ inputs.runs-on }}
    outputs:
      versions: ${{steps.get-versions.outputs.versions}}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: Get version matrix
        id: get-versions
        uses: actionstoolbox/container-framework-actions/actions/get-versions-single@master
        with:
          os: ${{ inputs.directory }}

  build:
    runs-on: ${{ inputs.runs-on }}
    needs: get-versions
    if: ${{ needs.get-versions.outputs.versions != '[]' && needs.get-versions.outputs.versions != '' }}
    strategy:
      max-parallel: ${{ inputs.max-parallel }}
      fail-fast: ${{ inputs.fail-fast }}
      matrix:
        version: ${{ fromJson(needs.get-versions.outputs.versions) }}
    name: ${{ matrix.version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}
      - name: Check for changes
        id: changed-files-specific
        uses: tj-actions/changed-files@v31.0.3
        with:
          files: |
            Config/**
            Templates/**
            Scripts/**
            Dockerfiles/${{ inputs.directory }}/${{ matrix.version }}/**

      - name: Set up Docker
        if: ${{ steps.changed-files-specific.outputs.any_modified == 'true' || inputs.force-build }}
        uses: docker-practice/actions-setup-docker@master
      - name: Generate Dockerfile
        if: ${{ steps.changed-files-specific.outputs.any_modified == 'true' || inputs.force-build }}
        run: Dockerfiles/${{ inputs.directory }}/${{ matrix.version }}/manage.sh --generate
      - name: Run Hadolint
        if: ${{ (steps.changed-files-specific.outputs.any_modified == 'true' || inputs.force-build ) && inputs.lint }}
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/hadolint/master/pipeline.sh)
      - name: Build Docker Container
        if: ${{ steps.changed-files-specific.outputs.any_modified == 'true' || inputs.force-build }}
        run: Dockerfiles/${{ inputs.directory }}/${{ matrix.version }}/manage.sh --build --clean
      - name: Publish Containers to Docker Hub
        if: ${{ ( steps.changed-files-specific.outputs.any_modified == 'true' || inputs.force-build ) && ( inputs.publish_all || inputs.publish_dh ) }}
        run: echo "Publish Docker Hub"
      - name: Publish Containers to GitHub
        if: ${{ ( steps.changed-files-specific.outputs.any_modified == 'true' || inputs.force-build ) && ( inputs.publish_all || inputs.publish_gh ) }}
        run: echo "Publish Github"
